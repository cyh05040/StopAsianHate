"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoRefError = void 0;
var NoRefError = /** @class */ (function (_super) {
    __extends(NoRefError, _super);
    function NoRefError() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.message = "No valid `ref` provided.\nYou shuld use `ref` from render prop of Item component.\nExample:\n<Item>{({ ref }) => <div ref={ref}></div>}</Item>\n";
        return _this;
    }
    return NoRefError;
}(Error));
exports.NoRefError = NoRefError;
//# sourceMappingURL=no-ref-error.js.map